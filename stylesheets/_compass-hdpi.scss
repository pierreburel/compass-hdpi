// Default pixel ratio
$pixel-ratio-hdpi: 1.5 !default;

// Disable HDPI
$disable-hdpi: false !default;

// Force HDPI
$force-hdpi: false !default;

// This must be set to generated images folder relative to images set in
// config.rb if using a generated images folder. E.g 'generated'.
// This is a workaround for a compass 0.12.2 bug.
// @see https://github.com/chriseppstein/compass/issues/1077
$generated-image-folder: false !default;

// Set background-size property based on an image size
@mixin image-background-size($image) {
  @include background-size(image-width($image) image-height($image));
}

// Set element dimensions based on an image size
@mixin image-dimensions($image) {
  height: image-height($image);
  width: image-width($image);
}

// Media query block
@mixin media-hdpi($pixel-ratio: $pixel-ratio-hdpi) {

  // Default media query
  // http://www.brettjankord.com/2012/11/28/cross-browser-retinahigh-resolution-media-queries/
  $media-hdpi: "(-webkit-min-device-pixel-ratio: #{$pixel-ratio}), (min-resolution: #{$pixel-ratio*96}dpi)" !default;

  @if not $disable-hdpi {
    @if $force-hdpi {
      @content;
    } @else {
      @media #{$media-hdpi} {
        @content;
      }
    }
  }
}


// Check and fix the possible different `$sprite` position between the normal and the HDPI map
// @private
@mixin sprite-background-position-hdpi($map, $map-hdpi, $sprite, $offset-x: 0, $offset-y: 0) {
  $x: round(nth(sprite-position($map-hdpi, $sprite, $offset-x*2, $offset-y*2), 1) / 2);
  $y: round(nth(sprite-position($map-hdpi, $sprite, $offset-x*2, $offset-y*2), 2) / 2);
  @if $x != nth(sprite-position($map, $sprite, $offset-x, $offset-y), 1) or $y != nth(sprite-position($map, $sprite, $offset-x, $offset-y), 2) {
    background-position: $x $y;
  }
}

// Sprite selectors position fix
// @private
@mixin sprite-selectors-hdpi($map, $map-hdpi, $sprite-name, $full-sprite-name, $offset-x: 0, $offset-y: 0) {
  @each $selector in $sprite-selectors {
    @if sprite_has_selector($map, $sprite-name, $selector) {
      &:#{$selector}, &.#{$full-sprite-name}#{$default-sprite-separator}#{$selector}, &.#{$full-sprite-name}-#{$selector} {
          @include sprite-background-position-hdpi($map, $map-hdpi, "#{$sprite-name}#{$default-sprite-separator}#{$selector}", $offset-x, $offset-y);
      }
    }
  }
}


// Include the position and (optionally) dimensions of this `$sprite`
// in the given sprite `$map` and `$map-hdpi`. The sprite url should come from either a base
// class or you can specify the `sprite-url` explicitly like this:
//
//     background: $map no-repeat;
@mixin sprite-hdpi($map, $map-hdpi, $sprite, $dimensions: false, $offset-x: 0, $offset-y: 0, $set-background: false) {
  @if $set-background {
    background-image: sprite-url($map);
    background-repeat: no-repeat;
  }
  background-position: sprite-position($map, $sprite, $offset-x, $offset-y);
  @if $dimensions {
    @include sprite-dimensions($map, $sprite);
  }
  @if not $disable-magic-sprite-selectors {
    @include sprite-selectors($map, $sprite, $sprite, $offset-x, $offset-y);
  }
  @include media-hdpi {
    background-image: sprite-url($map-hdpi);
    // Workaround for compass 0.12.2 bug. See above.
    @if $generated-image-folder {
      @include image-background-size($generated-image-folder + "/" + sprite-path($map));
    }
    @else {
      @include image-background-size(sprite-path($map));
    }
    @include sprite-background-position-hdpi($map, $map-hdpi, $sprite, $offset-x, $offset-y);
    @if not $disable-magic-sprite-selectors {
      @include sprite-selectors-hdpi($map, $map-hdpi, $sprite, $sprite, $offset-x, $offset-y);
    }
  }
}

// Generates a class for each space separated name in `$sprite-names`.
// The class will be of the form .<map-name>-<sprite-name>.
//
// If a base class is provided, then each class will extend it.
//
// If `$dimensions` is `true`, the sprite dimensions will specified.
@mixin sprites-hdpi($map, $map-hdpi, $sprites: sprite-names($map), $base-class: false, $dimensions: false, $prefix: sprite-map-name($map), $offset-x: 0, $offset-y: 0, $set-background: false) {
  @if $set-background {
    .#{$prefix} {
      background-image: sprite-url($map);
      background-repeat: no-repeat;
    }
  }
  @each $sprite in $sprites {
    .#{$prefix}-#{$sprite} {
      @if $base-class {
        @extend #{$base-class};
      }
      background-position: sprite-position($map, $sprite, $offset-x, $offset-y);
      @if $dimensions {
        @include sprite-dimensions($map, $sprite);
      }
      @if not $disable-magic-sprite-selectors {
        @include sprite-selectors($map, $sprite, $sprite, $offset-x, $offset-y);
      }
    }
  }
  @include media-hdpi {
    .#{$prefix} {
      background-image: sprite-url($map-hdpi);
      // Workaround for compass 0.12.2 bug. See above.
      @if $generated-image-folder {
        @include image-background-size($generated-image-folder + "/" + sprite-path($map));
      }
      @else {
        @include image-background-size(sprite-path($map));
      }
    }
    @each $sprite in $sprites {
      .#{$prefix}-#{$sprite} {
        @include sprite-background-position-hdpi($map, $map-hdpi, $sprite, $offset-x, $offset-y);
        @if not $disable-magic-sprite-selectors {
          @include sprite-selectors-hdpi($map, $map-hdpi, $sprite, $sprite, $offset-x, $offset-y);
        }
      }
    }
  }
}

// Set a normal and HDPI background-image and (optionally) its dimensions
@mixin background-image-hdpi($image, $image-hdpi, $dimensions: false) {
  background-image: image-url($image);
  @if $dimensions {
    @include image-dimensions($image);
  }
  @include media-hdpi {
    background-image: image-url($image-hdpi);
    @include image-background-size($image);
  }
}

// Same as `background-image-hdpi` but inline
@mixin inline-background-image-hdpi($image, $image-hdpi, $dimensions: false) {
  background-image: inline-image($image);
  @if $dimensions {
    @include image-dimensions($image);
  }
  @include media-hdpi {
    background-image: inline-image($image-hdpi);
    @include image-background-size($image);
  }
}
